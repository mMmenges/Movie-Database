{"id":"node_modules/passport-jwt/lib/strategy.js","dependencies":[{"name":"/Users/michaelmenges/Documents/CareerFoundryDocs/CareerFoundryDocs/GitHub/Movie-Database/package.json","includedInParent":true,"mtime":1618327622383},{"name":"/Users/michaelmenges/Documents/CareerFoundryDocs/CareerFoundryDocs/GitHub/Movie-Database/node_modules/passport-jwt/package.json","includedInParent":true,"mtime":1520908555000},{"name":"passport-strategy","loc":{"line":1,"column":23},"parent":"/Users/michaelmenges/Documents/CareerFoundryDocs/CareerFoundryDocs/GitHub/Movie-Database/node_modules/passport-jwt/lib/strategy.js","resolved":"/Users/michaelmenges/Documents/CareerFoundryDocs/CareerFoundryDocs/GitHub/Movie-Database/node_modules/passport-strategy/lib/index.js"},{"name":"./auth_header","loc":{"line":2,"column":25},"parent":"/Users/michaelmenges/Documents/CareerFoundryDocs/CareerFoundryDocs/GitHub/Movie-Database/node_modules/passport-jwt/lib/strategy.js","resolved":"/Users/michaelmenges/Documents/CareerFoundryDocs/CareerFoundryDocs/GitHub/Movie-Database/node_modules/passport-jwt/lib/auth_header.js"},{"name":"util","loc":{"line":3,"column":21},"parent":"/Users/michaelmenges/Documents/CareerFoundryDocs/CareerFoundryDocs/GitHub/Movie-Database/node_modules/passport-jwt/lib/strategy.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/util/util.js"},{"name":"url","loc":{"line":4,"column":20},"parent":"/Users/michaelmenges/Documents/CareerFoundryDocs/CareerFoundryDocs/GitHub/Movie-Database/node_modules/passport-jwt/lib/strategy.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/url/url.js"},{"name":"./helpers/assign.js","loc":{"line":5,"column":23},"parent":"/Users/michaelmenges/Documents/CareerFoundryDocs/CareerFoundryDocs/GitHub/Movie-Database/node_modules/passport-jwt/lib/strategy.js","resolved":"/Users/michaelmenges/Documents/CareerFoundryDocs/CareerFoundryDocs/GitHub/Movie-Database/node_modules/passport-jwt/lib/helpers/assign.js"},{"name":"./verify_jwt","loc":{"line":83,"column":34},"parent":"/Users/michaelmenges/Documents/CareerFoundryDocs/CareerFoundryDocs/GitHub/Movie-Database/node_modules/passport-jwt/lib/strategy.js","resolved":"/Users/michaelmenges/Documents/CareerFoundryDocs/CareerFoundryDocs/GitHub/Movie-Database/node_modules/passport-jwt/lib/verify_jwt.js"}],"generated":{"js":"var passport = require('passport-strategy')\n    , auth_hdr = require('./auth_header')\n    , util = require('util')\n    , url = require('url')\n    , assign = require('./helpers/assign.js');\n\n\n\n/**\n * Strategy constructor\n *\n * @param options\n *          secretOrKey: String or buffer containing the secret or PEM-encoded public key. Required unless secretOrKeyProvider is provided.\n *          secretOrKeyProvider: callback in the format secretOrKeyProvider(request, rawJwtToken, done)`,\n *                               which should call done with a secret or PEM-encoded public key\n *                               (asymmetric) for the given undecoded jwt token string and  request\n *                               combination. done has the signature function done(err, secret).\n *                               REQUIRED unless `secretOrKey` is provided.\n *          jwtFromRequest: (REQUIRED) Function that accepts a reqeust as the only parameter and returns the either JWT as a string or null\n *          issuer: If defined issuer will be verified against this value\n *          audience: If defined audience will be verified against this value\n *          algorithms: List of strings with the names of the allowed algorithms. For instance, [\"HS256\", \"HS384\"].\n *          ignoreExpiration: if true do not validate the expiration of the token.\n *          passReqToCallback: If true the, the verify callback will be called with args (request, jwt_payload, done_callback).\n * @param verify - Verify callback with args (jwt_payload, done_callback) if passReqToCallback is false,\n *                 (request, jwt_payload, done_callback) if true.\n */\nfunction JwtStrategy(options, verify) {\n\n    passport.Strategy.call(this);\n    this.name = 'jwt';\n\n    this._secretOrKeyProvider = options.secretOrKeyProvider;\n\n    if (options.secretOrKey) {\n        if (this._secretOrKeyProvider) {\n          \tthrow new TypeError('JwtStrategy has been given both a secretOrKey and a secretOrKeyProvider');\n        }\n        this._secretOrKeyProvider = function (request, rawJwtToken, done) {\n            done(null, options.secretOrKey)\n        };\n    }\n\n    if (!this._secretOrKeyProvider) {\n        throw new TypeError('JwtStrategy requires a secret or key');\n    }\n\n    this._verify = verify;\n    if (!this._verify) {\n        throw new TypeError('JwtStrategy requires a verify callback');\n    }\n\n    this._jwtFromRequest = options.jwtFromRequest;\n    if (!this._jwtFromRequest) {\n        throw new TypeError('JwtStrategy requires a function to retrieve jwt from requests (see option jwtFromRequest)');\n    }\n\n    this._passReqToCallback = options.passReqToCallback;\n    var jsonWebTokenOptions = options.jsonWebTokenOptions || {};\n    //for backwards compatibility, still allowing you to pass\n    //audience / issuer / algorithms / ignoreExpiration\n    //on the options.\n    this._verifOpts = assign({}, jsonWebTokenOptions, {\n      audience: options.audience,\n      issuer: options.issuer,\n      algorithms: options.algorithms,\n      ignoreExpiration: !!options.ignoreExpiration\n    });\n\n}\nutil.inherits(JwtStrategy, passport.Strategy);\n\n\n\n/**\n * Allow for injection of JWT Verifier.\n *\n * This improves testability by allowing tests to cleanly isolate failures in the JWT Verification\n * process from failures in the passport related mechanics of authentication.\n *\n * Note that this should only be replaced in tests.\n */\nJwtStrategy.JwtVerifier = require('./verify_jwt');\n\n\n\n/**\n * Authenticate request based on JWT obtained from header or post body\n */\nJwtStrategy.prototype.authenticate = function(req, options) {\n    var self = this;\n\n    var token = self._jwtFromRequest(req);\n\n    if (!token) {\n        return self.fail(new Error(\"No auth token\"));\n    }\n\n    this._secretOrKeyProvider(req, token, function(secretOrKeyError, secretOrKey) {\n        if (secretOrKeyError) {\n            self.fail(secretOrKeyError)\n        } else {\n            // Verify the JWT\n            JwtStrategy.JwtVerifier(token, secretOrKey, self._verifOpts, function(jwt_err, payload) {\n                if (jwt_err) {\n                    return self.fail(jwt_err);\n                } else {\n                    // Pass the parsed token to the user\n                    var verified = function(err, user, info) {\n                        if(err) {\n                            return self.error(err);\n                        } else if (!user) {\n                            return self.fail(info);\n                        } else {\n                            return self.success(user, info);\n                        }\n                    };\n\n                    try {\n                        if (self._passReqToCallback) {\n                            self._verify(req, payload, verified);\n                        } else {\n                            self._verify(payload, verified);\n                        }\n                    } catch(ex) {\n                        self.error(ex);\n                    }\n                }\n            });\n        }\n    });\n};\n\n\n\n/**\n * Export the Jwt Strategy\n */\n module.exports = JwtStrategy;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/passport-jwt/lib/strategy.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}}],"sources":{"node_modules/passport-jwt/lib/strategy.js":"var passport = require('passport-strategy')\n    , auth_hdr = require('./auth_header')\n    , util = require('util')\n    , url = require('url')\n    , assign = require('./helpers/assign.js');\n\n\n\n/**\n * Strategy constructor\n *\n * @param options\n *          secretOrKey: String or buffer containing the secret or PEM-encoded public key. Required unless secretOrKeyProvider is provided.\n *          secretOrKeyProvider: callback in the format secretOrKeyProvider(request, rawJwtToken, done)`,\n *                               which should call done with a secret or PEM-encoded public key\n *                               (asymmetric) for the given undecoded jwt token string and  request\n *                               combination. done has the signature function done(err, secret).\n *                               REQUIRED unless `secretOrKey` is provided.\n *          jwtFromRequest: (REQUIRED) Function that accepts a reqeust as the only parameter and returns the either JWT as a string or null\n *          issuer: If defined issuer will be verified against this value\n *          audience: If defined audience will be verified against this value\n *          algorithms: List of strings with the names of the allowed algorithms. For instance, [\"HS256\", \"HS384\"].\n *          ignoreExpiration: if true do not validate the expiration of the token.\n *          passReqToCallback: If true the, the verify callback will be called with args (request, jwt_payload, done_callback).\n * @param verify - Verify callback with args (jwt_payload, done_callback) if passReqToCallback is false,\n *                 (request, jwt_payload, done_callback) if true.\n */\nfunction JwtStrategy(options, verify) {\n\n    passport.Strategy.call(this);\n    this.name = 'jwt';\n\n    this._secretOrKeyProvider = options.secretOrKeyProvider;\n\n    if (options.secretOrKey) {\n        if (this._secretOrKeyProvider) {\n          \tthrow new TypeError('JwtStrategy has been given both a secretOrKey and a secretOrKeyProvider');\n        }\n        this._secretOrKeyProvider = function (request, rawJwtToken, done) {\n            done(null, options.secretOrKey)\n        };\n    }\n\n    if (!this._secretOrKeyProvider) {\n        throw new TypeError('JwtStrategy requires a secret or key');\n    }\n\n    this._verify = verify;\n    if (!this._verify) {\n        throw new TypeError('JwtStrategy requires a verify callback');\n    }\n\n    this._jwtFromRequest = options.jwtFromRequest;\n    if (!this._jwtFromRequest) {\n        throw new TypeError('JwtStrategy requires a function to retrieve jwt from requests (see option jwtFromRequest)');\n    }\n\n    this._passReqToCallback = options.passReqToCallback;\n    var jsonWebTokenOptions = options.jsonWebTokenOptions || {};\n    //for backwards compatibility, still allowing you to pass\n    //audience / issuer / algorithms / ignoreExpiration\n    //on the options.\n    this._verifOpts = assign({}, jsonWebTokenOptions, {\n      audience: options.audience,\n      issuer: options.issuer,\n      algorithms: options.algorithms,\n      ignoreExpiration: !!options.ignoreExpiration\n    });\n\n}\nutil.inherits(JwtStrategy, passport.Strategy);\n\n\n\n/**\n * Allow for injection of JWT Verifier.\n *\n * This improves testability by allowing tests to cleanly isolate failures in the JWT Verification\n * process from failures in the passport related mechanics of authentication.\n *\n * Note that this should only be replaced in tests.\n */\nJwtStrategy.JwtVerifier = require('./verify_jwt');\n\n\n\n/**\n * Authenticate request based on JWT obtained from header or post body\n */\nJwtStrategy.prototype.authenticate = function(req, options) {\n    var self = this;\n\n    var token = self._jwtFromRequest(req);\n\n    if (!token) {\n        return self.fail(new Error(\"No auth token\"));\n    }\n\n    this._secretOrKeyProvider(req, token, function(secretOrKeyError, secretOrKey) {\n        if (secretOrKeyError) {\n            self.fail(secretOrKeyError)\n        } else {\n            // Verify the JWT\n            JwtStrategy.JwtVerifier(token, secretOrKey, self._verifOpts, function(jwt_err, payload) {\n                if (jwt_err) {\n                    return self.fail(jwt_err);\n                } else {\n                    // Pass the parsed token to the user\n                    var verified = function(err, user, info) {\n                        if(err) {\n                            return self.error(err);\n                        } else if (!user) {\n                            return self.fail(info);\n                        } else {\n                            return self.success(user, info);\n                        }\n                    };\n\n                    try {\n                        if (self._passReqToCallback) {\n                            self._verify(req, payload, verified);\n                        } else {\n                            self._verify(payload, verified);\n                        }\n                    } catch(ex) {\n                        self.error(ex);\n                    }\n                }\n            });\n        }\n    });\n};\n\n\n\n/**\n * Export the Jwt Strategy\n */\n module.exports = JwtStrategy;\n"},"lineCount":140}},"error":null,"hash":"e027a95e95f3032a835bc41edbf0f7da","cacheData":{"env":{}}}