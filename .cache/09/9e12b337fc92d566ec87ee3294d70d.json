{"id":"node_modules/express-validator/src/context-items/standard-validation.js","dependencies":[{"name":"/Users/michaelmenges/Documents/CareerFoundryDocs/CareerFoundryDocs/GitHub/Movie-Database/package.json","includedInParent":true,"mtime":1618327622383},{"name":"/Users/michaelmenges/Documents/CareerFoundryDocs/CareerFoundryDocs/GitHub/Movie-Database/node_modules/express-validator/package.json","includedInParent":true,"mtime":499162500000},{"name":"../utils","loc":{"line":4,"column":24},"parent":"/Users/michaelmenges/Documents/CareerFoundryDocs/CareerFoundryDocs/GitHub/Movie-Database/node_modules/express-validator/src/context-items/standard-validation.js","resolved":"/Users/michaelmenges/Documents/CareerFoundryDocs/CareerFoundryDocs/GitHub/Movie-Database/node_modules/express-validator/src/utils.js"}],"generated":{"js":"\"use strict\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StandardValidation = void 0;\n\nvar utils_1 = require(\"../utils\");\n\nvar StandardValidation = /*#__PURE__*/function () {\n  function StandardValidation(validator, negated) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n    _classCallCheck(this, StandardValidation);\n\n    this.validator = validator;\n    this.negated = negated;\n    this.options = options;\n  }\n\n  _createClass(StandardValidation, [{\n    key: \"run\",\n    value: function () {\n      var _run = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(context, value, meta) {\n        var result;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                result = this.validator.apply(this, [utils_1.toString(value)].concat(_toConsumableArray(this.options)));\n\n                if (this.negated ? result : !result) {\n                  context.addError(this.message, value, meta);\n                }\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function run(_x, _x2, _x3) {\n        return _run.apply(this, arguments);\n      }\n\n      return run;\n    }()\n  }]);\n\n  return StandardValidation;\n}();\n\nexports.StandardValidation = StandardValidation;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":1,"column":0}},{"name":"Object","generated":{"line":25,"column":0},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":2,"column":0}},{"generated":{"line":25,"column":6},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":2,"column":6}},{"name":"defineProperty","generated":{"line":25,"column":7},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":2,"column":7}},{"generated":{"line":25,"column":21},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":2,"column":0}},{"name":"exports","generated":{"line":25,"column":22},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":2,"column":22}},{"generated":{"line":25,"column":29},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":2,"column":0}},{"generated":{"line":25,"column":31},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":2,"column":31}},{"generated":{"line":25,"column":43},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":2,"column":0}},{"generated":{"line":25,"column":45},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":2,"column":45}},{"name":"value","generated":{"line":26,"column":0},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":2,"column":47}},{"name":"value","generated":{"line":26,"column":2},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":2,"column":47}},{"generated":{"line":26,"column":7},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":2,"column":52}},{"generated":{"line":26,"column":9},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":2,"column":54}},{"generated":{"line":27,"column":0},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":2,"column":45}},{"generated":{"line":27,"column":1},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":2,"column":0}},{"name":"exports","generated":{"line":28,"column":0},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":3,"column":0}},{"generated":{"line":28,"column":7},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":3,"column":7}},{"name":"StandardValidation","generated":{"line":28,"column":8},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":3,"column":8}},{"generated":{"line":28,"column":26},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":3,"column":0}},{"generated":{"line":28,"column":29},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":3,"column":29}},{"generated":{"line":28,"column":34},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":3,"column":34}},{"generated":{"line":28,"column":35},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":3,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":4,"column":0}},{"name":"utils_1","generated":{"line":30,"column":4},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":4,"column":6}},{"generated":{"line":30,"column":11},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":4,"column":13}},{"name":"require","generated":{"line":30,"column":14},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":4,"column":16}},{"generated":{"line":30,"column":21},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":4,"column":23}},{"generated":{"line":30,"column":22},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":4,"column":24}},{"generated":{"line":30,"column":32},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":4,"column":23}},{"generated":{"line":30,"column":33},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":4,"column":0}},{"name":"StandardValidation","generated":{"line":32,"column":4},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":5,"column":6}},{"generated":{"line":33,"column":0},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":6,"column":4}},{"name":"validator","generated":{"line":33,"column":30},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":6,"column":16}},{"generated":{"line":33,"column":39},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":6,"column":4}},{"name":"negated","generated":{"line":33,"column":41},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":6,"column":27}},{"generated":{"line":33,"column":48},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":6,"column":4}},{"generated":{"line":33,"column":50},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":6,"column":50}},{"generated":{"line":34,"column":0},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":6,"column":50}},{"name":"options","generated":{"line":34,"column":8},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":6,"column":36}},{"generated":{"line":34,"column":15},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":6,"column":50}},{"generated":{"line":34,"column":86},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":6,"column":46}},{"generated":{"line":34,"column":88},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":6,"column":50}},{"generated":{"line":36,"column":0},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":6,"column":50}},{"generated":{"line":38,"column":0},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":7,"column":8}},{"name":"validator","generated":{"line":38,"column":9},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":7,"column":13}},{"generated":{"line":38,"column":18},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":7,"column":8}},{"name":"validator","generated":{"line":38,"column":21},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":7,"column":25}},{"generated":{"line":38,"column":30},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":7,"column":8}},{"generated":{"line":39,"column":0},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":8,"column":8}},{"name":"negated","generated":{"line":39,"column":9},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":8,"column":13}},{"generated":{"line":39,"column":16},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":8,"column":8}},{"name":"negated","generated":{"line":39,"column":19},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":8,"column":23}},{"generated":{"line":39,"column":26},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":8,"column":8}},{"generated":{"line":40,"column":0},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":9,"column":8}},{"name":"options","generated":{"line":40,"column":9},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":9,"column":13}},{"generated":{"line":40,"column":16},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":9,"column":8}},{"name":"options","generated":{"line":40,"column":19},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":9,"column":23}},{"generated":{"line":40,"column":26},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":9,"column":8}},{"generated":{"line":41,"column":0},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":10,"column":5}},{"name":"context","generated":{"line":46,"column":90},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":11,"column":14}},{"name":"value","generated":{"line":46,"column":99},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":11,"column":23}},{"name":"meta","generated":{"line":46,"column":106},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":11,"column":30}},{"name":"result","generated":{"line":52,"column":0},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":12,"column":14}},{"name":"result","generated":{"line":52,"column":16},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":12,"column":14}},{"generated":{"line":52,"column":25},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":12,"column":23}},{"name":"validator","generated":{"line":52,"column":30},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":12,"column":28}},{"generated":{"line":52,"column":39},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":12,"column":23}},{"name":"utils_1","generated":{"line":52,"column":53},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":12,"column":38}},{"generated":{"line":52,"column":60},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":12,"column":45}},{"name":"toString","generated":{"line":52,"column":61},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":12,"column":46}},{"generated":{"line":52,"column":69},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":12,"column":38}},{"name":"value","generated":{"line":52,"column":70},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":12,"column":55}},{"generated":{"line":52,"column":75},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":12,"column":38}},{"generated":{"line":52,"column":76},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":12,"column":23}},{"generated":{"line":52,"column":104},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":12,"column":66}},{"name":"options","generated":{"line":52,"column":109},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":12,"column":71}},{"generated":{"line":52,"column":116},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":12,"column":23}},{"generated":{"line":54,"column":0},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":13,"column":8}},{"generated":{"line":54,"column":20},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":13,"column":12}},{"name":"negated","generated":{"line":54,"column":25},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":13,"column":17}},{"generated":{"line":54,"column":32},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":13,"column":12}},{"name":"result","generated":{"line":54,"column":35},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":13,"column":27}},{"generated":{"line":54,"column":41},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":13,"column":12}},{"generated":{"line":54,"column":44},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":13,"column":36}},{"name":"result","generated":{"line":54,"column":45},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":13,"column":37}},{"generated":{"line":54,"column":51},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":13,"column":8}},{"generated":{"line":54,"column":53},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":13,"column":45}},{"name":"context","generated":{"line":55,"column":0},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":14,"column":12}},{"name":"context","generated":{"line":55,"column":18},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":14,"column":12}},{"generated":{"line":55,"column":25},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":14,"column":19}},{"name":"addError","generated":{"line":55,"column":26},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":14,"column":20}},{"generated":{"line":55,"column":34},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":14,"column":12}},{"generated":{"line":55,"column":35},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":14,"column":29}},{"name":"message","generated":{"line":55,"column":40},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":14,"column":34}},{"generated":{"line":55,"column":47},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":14,"column":12}},{"name":"value","generated":{"line":55,"column":49},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":14,"column":43}},{"generated":{"line":55,"column":54},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":14,"column":12}},{"name":"meta","generated":{"line":55,"column":56},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":14,"column":50}},{"generated":{"line":55,"column":60},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":14,"column":12}},{"generated":{"line":56,"column":0},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":15,"column":9}},{"name":"exports","generated":{"line":77,"column":0},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":18,"column":0}},{"generated":{"line":77,"column":7},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":18,"column":7}},{"name":"StandardValidation","generated":{"line":77,"column":8},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":18,"column":8}},{"generated":{"line":77,"column":26},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":18,"column":0}},{"name":"StandardValidation","generated":{"line":77,"column":29},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":18,"column":29}},{"generated":{"line":77,"column":47},"source":"node_modules/express-validator/src/context-items/standard-validation.js","original":{"line":18,"column":0}}],"sources":{"node_modules/express-validator/src/context-items/standard-validation.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StandardValidation = void 0;\nconst utils_1 = require(\"../utils\");\nclass StandardValidation {\n    constructor(validator, negated, options = []) {\n        this.validator = validator;\n        this.negated = negated;\n        this.options = options;\n    }\n    async run(context, value, meta) {\n        const result = this.validator(utils_1.toString(value), ...this.options);\n        if (this.negated ? result : !result) {\n            context.addError(this.message, value, meta);\n        }\n    }\n}\nexports.StandardValidation = StandardValidation;\n"},"lineCount":null}},"error":null,"hash":"eafc4826d5950d12cf017bf09f541808","cacheData":{"env":{}}}